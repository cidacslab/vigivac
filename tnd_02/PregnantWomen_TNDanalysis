### ANalysis pregnant women 

library(data.table)
library(tibble)
library(dplyr)
library(magrittr)
library(plotly)
library(arrow)
library(tidyverse)
library(tidylog)
library(tidytable)
library(lubridate)
library(summarytools)
library(gtsummary)
library(parameters)


tnd=data.table::rbindlist(lapply(Sys.glob("/.parquet"), arrow::read_parquet))



##STEP 0 - Creating variable of valid collection date (dt_coleta_valid)
##This step here was included only because we had problems with collection date in or database (2022-03-01)
##The correction was performed based on the mistakes found in the years of dt_coleta. 
##Therefore, this step, and the use of this variable is only necessary, if dt_coleta in our database 
##continues to present this problem. 

tnd = tnd %>% mutate(dt_coleta_valid=case_when(
  dt_inicio_sintomas<=dt_coleta ~ dt_coleta,
  dt_inicio_sintomas>dt_coleta  ~ dt_inicio_sintomas))



##STEP 01 - Creating variable of first case date. This step must be performed before filtering the period of study, 
##Creating the variable of first infection at this point is essential 
## so we don't lose the infections that occurred before the Study Period.

df_pos <- tnd %>% 
  filter(confirmado == "Confirmado") %>%
  select(id_vigvac, dt_coleta_valid) %>%
  arrange(dt_coleta_valid) %>%
  group_by(id_vigvac) %>%
  dplyr::mutate(counter = row_number()) %>%
  filter(counter == 1) %>%
  mutate(firstcasedate = dt_coleta_valid) %>%
  select(id_vigvac, firstcasedate)


tnd = left_join(tnd, df_pos, by = "id_vigvac")


##STEP 02 - Filtering Study Period based on collection date and date max of database 

max_date <- as.Date("2022-04-30") ##Última data do banco de vacinação 

tnd_v1 = tnd %>% filter(dt_coleta_valid>"2022-01-01" & dt_coleta_valid < max_date) ##
tnd_v2 = tnd_v1 %>% filter(assintomatico==0)
tnd_v2 = tnd_v2 %>% filter(non_symptom_info==0)

tnd_v1 %>% count(non_symptom_info,sort=T) %>% View
tnd_v1 %>% count(assintomatico,sort=T) %>% View

## quantos entram removendo o diff valid 
## diferença nos assintomaticos nos dois casos 
## inconscistencia de data (?)

##STEP 03 - Checking if there are still register that are not PCR or antigen (this step is already done, 
##in TND_prep_00- STEP 00 - SG_long and STEP 06 - SRAG_long)
#Also, check if there are no missing values in the date of first symptoms 

tnd_v2 = tnd_v2 %>% filter(tipo_teste == "RT-PCR" | tipo_teste =="Antígeno")
tnd_v2 = tnd_v2 %>% filter(!is.na(dt_inicio_sintomas))

##STEP 04 - Creating the outcome variable 
##Basically, hospitalization may occurs 4 days prior of collection date 
##up to 14 days of collection date (considering that individuals may be hospitalized with symptoms and perform the test in the hospital). 
##Death events may occur from day 0 to day 28 since date of collection. 

tnd_v3 = tnd_v2 %>%
arrange.(dt_coleta_valid, .by=id_vigvac) %>%
mutate.(
diff_sample_hosp = (dt_interna - dt_coleta_valid),
diff_sample_death = (dt_evolucao - dt_coleta_valid)
) %>%
mutate.(
hosp_event = case_when.(
diff_sample_hosp>(-4) & diff_sample_hosp<= 14 ~ "Hospitalization" 
),
death_event = case_when.(
evolucao %in% c(2, 3) & (diff_sample_death >= 0 & diff_sample_death <= 28) ~ "Death-related"
)
) %>%
mutate.(outcome = case_when.(
(hosp_event == "Hospitalization" | death_event == "Death-related") ~ "Hosp_Death",
TRUE ~ "No event"
))



tnd_v3 %>% count(outcome,sort=T) %>% head(5)


##STEP 05 - Identifying and excluding - date inconsistencies in our database 
##Here we are excluding if: 
## - death occurred prior to the collection date 
## - hospitalization occurred after the last date of our database (max_date)
## - outcome date (dt_evolucao) occurred after max_date 
## - date of hospitalization occurred more than 14 day before first date symptoms 
## - date of collection occurred more than 14 day before first date symptoms 

tnd_v4 = tnd_v3 %>% mutate(incon_data=case_when(
diff_sample_death<0 & evolucao %in% c(2,3)~FALSE,
dt_interna>max_date~ FALSE,
dt_evolucao>max_date~FALSE,
dt_interna+14<dt_inicio_sintomas~FALSE,
dt_coleta_valid+14<dt_inicio_sintomas~FALSE,
TRUE~TRUE))

tnd_v4 %>% count(incon_data,sort=T) %>% head(5)
tnd_v5 = tnd_v4 %>% filter(incon_data == TRUE)


##STEP 06 - Excluding tests representing the same infection and outcomes
##Here we are excluding if: 
## - Positive test which occurred in the last 90 days (could be the same infection)
## - Negative followed by positive test occurred in the last 7 days 
## - Negative test followed by negative test occurred in the last 14 days
## - For positive tests and outcome hosp_death excluded negative test occurred less then 28 days after 
## - For positive tests and outcome hosp_death excluded another confirmed test occurred less then 28 days after 

tnd_v6 = tnd_v5 %>% group_by(id_vigvac)%>% arrange(dt_coleta_valid)%>%
mutate(valid_test = case_when(
confirmado == "Confirmado" & lag(confirmado == "Confirmado") & (dt_coleta_valid - lag(dt_coleta_valid)) < 90 ~ "non_valid_90",
confirmado == "Confirmado" & lag(confirmado == "Confirmado", n = 2) & (dt_coleta_valid - lag(dt_coleta_valid, n = 2)) < 90 ~ "non_valid_90",
confirmado == "Negativo" & lag(confirmado == "Confirmado") & (dt_coleta_valid - lag(dt_coleta_valid)) < 90 ~ "non_valid_90",
confirmado == "Negativo" & lag(confirmado == "Confirmado", n = 2) & (dt_coleta_valid - lag(dt_coleta_valid,n=2)) < 90 ~ "non_valid_90",
confirmado == "Negativo" & lead(confirmado == "Confirmado") & (lead(dt_coleta_valid) - dt_coleta_valid) < 7 ~ "non_valid_7",
confirmado == "Negativo" & lead(confirmado == "Confirmado",n=2) & (lead(dt_coleta_valid,n=2) - dt_coleta_valid) < 7 ~ "non_valid_7",
confirmado == "Negativo" & lag(confirmado == "Negativo") & (dt_coleta_valid - lag(dt_coleta_valid)) < 14 ~ "non_valid_14",
TRUE ~ "valid"
))
tnd_v6 = tnd_v6 %>% ungroup()

tnd_v6 %>% count(valid_test,sort=T) %>% head(5)

tnd_v7 = tnd_v6 %>% group_by(id_vigvac)%>%
arrange(dt_coleta_valid) %>%
mutate(valid_outcome = (case_when(
n() > 1 & outcome == "Hosp_Death" & lag(confirmado) == "Confirmado" & confirmado == "Negativo" & (dt_coleta_valid - lag(dt_coleta_valid)) < 28 ~ "non-valid",
n() > 1 & outcome == "Hosp_Death" & lead(confirmado) == "Confirmado" & confirmado == "Negativo" & (lead(dt_coleta_valid) - dt_coleta_valid) < 28 ~ "non-valid",
TRUE ~ "valid"
)))

tnd_v7 = tnd_v7 %>% ungroup()
tnd_v7 %>% count(valid_outcome,sort=T) %>% head(5)
  
tnd_v8 = tnd_v7 %>% filter(valid_test=="valid")
tnd_v8 = tnd_v8 %>% filter(valid_outcome=="valid")



##STEP 07 - Excluding registers without city (cod_ibge) and sex information 

tnd_v9 = tnd_v8 %>% filter(!is.na(cod_ibge))
tnd_v10 = tnd_v9 %>% filter(!is.na(sexo) & !(sexo %in% c("I"))) 

##STEP 08 - Creating Variant of Concern (VOC) by date of prevalence  
tnd_v11 = tnd_v10 %>% mutate.(VOC=case_when.(dt_coleta_valid>="2022-01-01"~"Omicron",
                                             dt_coleta_valid<"2022-01-01"~"Delta"))
                                             
                                             
tnd_v12 = tnd_v11%>% mutate.(status_vacinal = case_when.(
  (dt_coleta_valid - d3_data_aplicacao) >= 0 &
    (dt_coleta_valid - d3_data_aplicacao) <= 6 ~ "v3_0:6",
  (dt_coleta_valid - d3_data_aplicacao) >= 7 ~ "v3_7",
  (dt_coleta_valid - d2_data_aplicacao) > 13 & is.na(d3_data_aplicacao) |
    (dt_coleta_valid - d2_data_aplicacao) > 13 & (dt_coleta - d3_data_aplicacao) < 0 ~ "v2_14",
  (dt_coleta_valid - d2_data_aplicacao) >= 0 & (dt_coleta - d2_data_aplicacao) <= 13 ~ "v2_0:13",
  ((dt_coleta_valid - d1_data_aplicacao) > 13 &
     (dt_coleta_valid - d2_data_aplicacao) <= 13) |
    ((dt_coleta_valid - d1_data_aplicacao) > 13 &
       is.na(d2_data_aplicacao))~ "v1_14+",
  (dt_coleta_valid - d1_data_aplicacao) >= 0 &
    (dt_coleta_valid - d1_data_aplicacao) <= 13 ~ "v1_0:13",
  (dt_coleta_valid - d1_data_aplicacao) < 0 | is.na(d1_data_aplicacao) ~"uv"))
  
  
  
  
  ##Pregnant waning over 3rd dose 
tnd_v13 = tnd_v12 %>% mutate.(status_waning = case_when.(
  (dt_coleta_valid - d3_data_aplicacao) >= 0 &
    (dt_coleta_valid - d3_data_aplicacao) <= 13 ~ "v3_0:13",
  (dt_coleta_valid - d3_data_aplicacao) >= 14 ~ "v3_14+",
  (dt_coleta_valid - d2_data_aplicacao) > 13 & is.na(d3_data_aplicacao) |
    (dt_coleta_valid - d2_data_aplicacao) > 13 & (dt_coleta - d3_data_aplicacao) < 0 ~ "v2_14",
  (dt_coleta_valid - d2_data_aplicacao) >= 0 & (dt_coleta - d2_data_aplicacao) <= 13 ~ "v2_0:13",
  ((dt_coleta_valid - d1_data_aplicacao) > 13 &
     (dt_coleta_valid - d2_data_aplicacao) <= 13) |
    ((dt_coleta_valid - d1_data_aplicacao) > 13 &
       is.na(d2_data_aplicacao))~ "v1_14+",
  (dt_coleta_valid - d1_data_aplicacao) >= 0 &
    (dt_coleta_valid - d1_data_aplicacao) <= 13 ~ "v1_0:13",
  (dt_coleta_valid - d1_data_aplicacao) < 0 | is.na(d1_data_aplicacao) ~"uv"))
  
  
allvac = tnd_v13 %>% mutate(SE=epiweek(dt_coleta_valid))
allvac = allvac %>% mutate(mes_d2=month(d2_data_aplicacao))

allvac = allvac %>% mutate.(
  days_first_positive=dt_coleta_valid - firstcasedate
) %>%
  mutate_rowwise.(n_comorb = sum(c_across.(diabetes:drc))) %>%
  mutate(prev_infect = case_when(
    days_first_positive > 180 ~ ">6 mo",
    days_first_positive > 90 & days_first_positive <= 180 ~ "3-6 mo",
    days_first_positive<=90 ~ "Not previous infected",
    is.na(firstcasedate) ~ "Not previous infected"))%>% mutate.(
      n_comorb = fct_lump(factor(n_comorb), n = 2, other_level = "2+"),
      days_vacc_from_firstpos = as.numeric(d1_data_aplicacao - firstcasedate),
      raca = fct_explicit_na(factor(raca))
    )

##Only adolescents
allvac %>% count(gestante,sort=T) %>% head(5)
allvac %>% count(puerpera,sort=T) %>% head(5)


##Incluindo variable of Brazilian Deprivation Index

ibp = fread("/Users/pilarveras/Desktop/Adolescents_children/Adolescentes_LID/Bancos/IBP.csv")
ibp = ibp %>% select(nome_grande_regiao,uf,codmun6,q_measure_1f_12)
allvac$cod_ibge = as.numeric(allvac$cod_ibge)
colnames(allvac)[11]  = "codmun6"
allvac = allvac %>% left_join(ibp, by="codmun6")

allvac = allvac %>% filter(!is.na(q_measure_1f_12))

allvac = allvac %>% mutate.(vs_type = paste(d1_nome_vacina, status_vacinal, sep = "_"))
allvac <- allvac %>%
  mutate.(
    vs_type = case_when.(
      vs_type == "Ad26_uv" ~ "uv",
      vs_type == "CV_uv" ~ "uv",
      vs_type == "BNT162b2_uv" ~ "uv",
      vs_type == "AZ_uv" ~ "uv",
      vs_type == "NA_uv" ~ "uv",
      TRUE ~ vs_type
    )
  )


allvac = allvac %>% mutate.(diff_vac = d2_data_aplicacao - d1_data_aplicacao) %>% 
  filter(diff_vac>=14 | is.na(d1_data_aplicacao)|is.na(d2_data_aplicacao)|is.na(d3_data_aplicacao))

cv_fix = allvac %>% filter(str_detect(vs_type, "CV|uv"))

cv_fix = cv_fix %>% filter(d2_nome_vacina =="CV" | is.na(d2_nome_vacina))
cv_het = cv_fix %>% filter(d3_nome_vacina =="BNT162b2" | is.na(d3_nome_vacina))


cv_het = cv_het %>% mutate.(faixa_etaria = case_when.(
  idade < 20 ~ "<20",
  idade >= 20 & idade < 35 ~ "20-34",
  idade >= 35 ~ "35+"))


cv_v2 =  cv_het %>% filter(status_vacinal %in% c("v2_14", "v3_0:6","v3_7"))

saveRDS(cv_v2,"")

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

## Teste de sensibilidade 



library(knitr)
library(magrittr)
library(tidyverse)
library(magrittr)
library(tidytable)
library(lubridate)
knitr::opts_chunk$set(echo = FALSE)


## Relevel vaccine status (the reference here must me be unvaccinated individuals - uv)

cv = readRDS()

cv$status_vacinal=as.factor(cv$status_vacinal)
cv$status_vacinal=relevel(cv$status_vacinal,ref="v2_14")

cv$status_waning=as.factor(cv$status_waning)
cv$status_waning=relevel(cv$status_waning,ref="v2_14")


##Converting all variables from our model to categorical  
##For analysis model all variables included must be categorical 


cv$faixa_etaria=as.factor(cv$faixa_etaria)
cv$confirmado = as.factor(cv$confirmado)
cv$q_measure_1f_12 = as.factor(cv$q_measure_1f_12)
cv$prev_infect=as.factor(cv$prev_infect) 
cv$prev_infect=relevel(cv$prev_infect,ref="Not previous infected")
cv$SE=as.factor(cv$SE)
cv$nome_grande_regiao=as.factor(cv$nome_grande_regiao)
cv$mes_d2=as.factor(cv$mes_d2)


```


## Tabela Demográfica da população de gestantes. 

```{r echo=FALSE, results='asis'}

library(gtsummary)

cv_v1 = cv %>% select(id_vigvac,confirmado,faixa_etaria,raca,
                       q_measure_1f_12,nome_grande_regiao,outcome,n_comorb, prev_infect,SE, death_event, hosp_event, mes_d2)
cv_all_char = cv_v1 %>% tbl_summary(by = confirmado, include = -id_vigvac,digits = all_categorical() ~ c(0, 1))

print(cv_all_char)


```

## Tabela dos testes positivos e negativos 
Estratificados por status vacinal e por tempo após primeira e segunda dose. 

```{r echo=FALSE, results='asis'}

library(knitr)
library(gtsummary)

#Table Characteristic for the omicron group 
cv_v1 = cv %>% select(id_vigvac,confirmado, status_vacinal)
cv_char = cv_v1 %>% tbl_summary(by = confirmado, include = -id_vigvac, percent = "row",digits = all_categorical() ~ c(0, 2))

print(cv_char)

```

## Infecção Sintomática - Gestantes
### ODDS RATIO e VE
### Modelo Crude
```{r echo=FALSE, results='asis'}
library(knitr)
library(parameters)


#Model for Symptomatic infection

##Odd Ration - crude
cv_crude = glm(confirmado == "Confirmado" ~ status_vacinal,
               family = binomial, data = cv)
cv_crude_results = model_parameters(
  cv_crude, exponentiate = T, ci_method="wald")

VE = (1-cv_crude_results$Coefficient)*100
high = (1-cv_crude_results$CI_low)*100
low = (1-cv_crude_results$CI_high)*100

cv_crude_results$VE= VE
cv_crude_results$high = high
cv_crude_results$low = low

kable(cv_crude_results[1:3,], caption = "Odds Ratio - Crude - Infecção Sintomática - Gestante",digits = 2)


```

### Infecção Sintomática - Modelo com ajustado
```{r echo=FALSE, results='asis'}
library(knitr)
library(parameters)

##Odd Ratio - Adjusted 

cv_adj = glm(confirmado == "Confirmado"~status_vacinal+SE+faixa_etaria+raca+q_measure_1f_12+n_comorb+prev_infect+nome_grande_regiao+mes_d2,family = binomial, data = cv)

cv_adj_results = model_parameters(
  cv_adj, exponentiate = T, ci_method="wald") 

VE = (1-cv_adj_results$Coefficient)*100
high = (1-cv_adj_results$CI_low)*100
low = (1-cv_adj_results$CI_high)*100

cv_adj_results$VE= VE
cv_adj_results$high = high
cv_adj_results$low = low

kable(cv_adj_results[1:3,], caption = "Odds Ratio - Ajustada por Semana epidemiológica- Infecção Sintomática - Gestante", digits = 2)




```

```{r echo=FALSE, results='asis'}

library(knitr)
library(gtsummary)

#Severe outcomes 
omic_neg = cv %>% filter(confirmado == "Negativo")
omic_posit = cv %>% filter(confirmado=="Confirmado" & outcome == "Hosp_Death")
omicsev=bind_rows.(omic_neg,omic_posit)


#Table Characteristic for the omicron group 
cv_v1 = omicsev %>% select(id_vigvac,confirmado, status_vacinal)
cv_char = cv_v1 %>% tbl_summary(by = confirmado, include = -id_vigvac, percent = "row",digits = all_categorical() ~ c(0, 2))

print(cv_char)

```
## Omicron period - Severe outcomes (hospitalisation or death)
### ODDS RATIO

```{r echo=FALSE, results='asis'}
library(knitr)
library(parameters)

#Severe outcomes 
omic_neg = cv %>% filter(confirmado == "Negativo")
omic_posit = cv %>% filter(confirmado=="Confirmado" & outcome == "Hosp_Death")
omicsev=bind_rows.(omic_neg,omic_posit)


##Odd Ratio - crude
omicsev_crude = glm(confirmado == "Confirmado" ~ status_vacinal,
                 family = binomial, data = omicsev)
omicsev_crude_results = model_parameters(
  omicsev_crude, exponentiate = T, ci_method="wald")

VE = (1-omicsev_crude_results$Coefficient)*100
high = (1-omicsev_crude_results$CI_low)*100
low = (1-omicsev_crude_results$CI_high)*100

omicsev_crude_results$VE= VE
omicsev_crude_results$high = high
omicsev_crude_results$low = low

kable(omicsev_crude_results[1:3,], caption = "Odds Ratio - Crude - Severe Outcomes - Omicron", digits = 2,format.args = list(scientific = FALSE))



##Odd Ratio - Adjusted 
omicsev_adj = glm(confirmado == "Confirmado" ~ status_vacinal+SE+faixa_etaria+raca+q_measure_1f_12+n_comorb+prev_infect+nome_grande_regiao+mes_d2,
               family = binomial, data = omicsev)
omicsev_adj_results = model_parameters(
  omicsev_adj, exponentiate = T, ci_method="wald")

VE = (1-omicsev_adj_results$Coefficient)*100
high = (1-omicsev_adj_results$CI_low)*100
low = (1-omicsev_adj_results$CI_high)*100

omicsev_adj_results$VE= VE
omicsev_adj_results$high = high
omicsev_adj_results$low = low

kable(omicsev_adj_results[1:3,], caption = "Odds Ratio - Adjusted - Severe Outcomes - Omicron", digits = 2, format.args = list(scientific = FALSE))



```

## Tabela dos testes positivos e negativos 
Estratificados por status vacinal e por tempo após primeira e segunda dose. 

```{r echo=FALSE, results='asis'}

library(knitr)
library(gtsummary)

#Table Characteristic for the omicron group 
cv_v1 = cv %>% select(id_vigvac,confirmado, status_waning)
cv_char = cv_v1 %>% tbl_summary(by = confirmado, include = -id_vigvac, percent = "row",digits = all_categorical() ~ c(0, 2))

print(cv_char)

```

## Infecção Sintomática - Gestantes
### ODDS RATIO e VE
### Modelo Crude
```{r echo=FALSE, results='asis'}
library(knitr)
library(parameters)


#Model for Symptomatic infection

##Odd Ration - crude
cv_crude = glm(confirmado == "Confirmado" ~ status_waning,
               family = binomial, data = cv)
cv_crude_results = model_parameters(
  cv_crude, exponentiate = T, ci_method="wald")

VE = (1-cv_crude_results$Coefficient)*100
high = (1-cv_crude_results$CI_low)*100
low = (1-cv_crude_results$CI_high)*100

cv_crude_results$VE= VE
cv_crude_results$high = high
cv_crude_results$low = low

kable(cv_crude_results[1:4,], caption = "Odds Ratio - Crude - Infecção Sintomática - Gestante",digits = 2)


```

### Infecção Sintomática - Modelo com ajustado
```{r echo=FALSE, results='asis'}
library(knitr)
library(parameters)

##Odd Ratio - Adjusted 

cv_adj = glm(confirmado == "Confirmado"~status_waning+SE+faixa_etaria+raca+q_measure_1f_12+n_comorb+prev_infect+nome_grande_regiao+mes_d2,family = binomial, data = cv)

cv_adj_results = model_parameters(
  cv_adj, exponentiate = T, ci_method="wald") 

VE = (1-cv_adj_results$Coefficient)*100
high = (1-cv_adj_results$CI_low)*100
low = (1-cv_adj_results$CI_high)*100

cv_adj_results$VE= VE
cv_adj_results$high = high
cv_adj_results$low = low

kable(cv_adj_results[1:4,], caption = "Odds Ratio - Ajustada por Semana epidemiológica- Infecção Sintomática - Gestante", digits = 2)




```{r echo=FALSE, results='asis'}

library(knitr)
library(gtsummary)

#Severe outcomes 
omic_neg = cv %>% filter(confirmado == "Negativo")
omic_posit = cv %>% filter(confirmado=="Confirmado" & outcome == "Hosp_Death")
omicsev=bind_rows.(omic_neg,omic_posit)


#Table Characteristic for the omicron group 
cv_v1 = omicsev %>% select(id_vigvac,confirmado, status_waning)
cv_char = cv_v1 %>% tbl_summary(by = confirmado, include = -id_vigvac, percent = "row",digits = all_categorical() ~ c(0, 2))

print(cv_char)

```
## Omicron period - Severe outcomes (hospitalisation or death)
### ODDS RATIO

```{r echo=FALSE, results='asis'}
library(knitr)
library(parameters)

#Severe outcomes 
omic_neg = cv %>% filter(confirmado == "Negativo")
omic_posit = cv %>% filter(confirmado=="Confirmado" & outcome == "Hosp_Death")
omicsev=bind_rows.(omic_neg,omic_posit)


##Odd Ratio - crude
omicsev_crude = glm(confirmado == "Confirmado" ~ status_waning,
                 family = binomial, data = omicsev)
omicsev_crude_results = model_parameters(
  omicsev_crude, exponentiate = T, ci_method="wald")

VE = (1-omicsev_crude_results$Coefficient)*100
high = (1-omicsev_crude_results$CI_low)*100
low = (1-omicsev_crude_results$CI_high)*100

omicsev_crude_results$VE= VE
omicsev_crude_results$high = high
omicsev_crude_results$low = low

kable(omicsev_crude_results[1:4,], caption = "Odds Ratio - Crude - Severe Outcomes - Omicron", digits = 2,format.args = list(scientific = FALSE))



##Odd Ratio - Adjusted 
omicsev_adj = glm(confirmado == "Confirmado" ~ status_waning+SE+faixa_etaria+raca+q_measure_1f_12+n_comorb+prev_infect+nome_grande_regiao+mes_d2,
               family = binomial, data = omicsev)
omicsev_adj_results = model_parameters(
  omicsev_adj, exponentiate = T, ci_method="wald")

VE = (1-omicsev_adj_results$Coefficient)*100
high = (1-omicsev_adj_results$CI_low)*100
low = (1-omicsev_adj_results$CI_high)*100

omicsev_adj_results$VE= VE
omicsev_adj_results$high = high
omicsev_adj_results$low = low

kable(omicsev_adj_results[1:4,], caption = "Odds Ratio - Adjusted - Severe Outcomes - Omicron", digits = 2, format.args = list(scientific = FALSE))

```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.



